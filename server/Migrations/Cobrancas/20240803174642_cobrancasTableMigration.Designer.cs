// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server.Db;

#nullable disable

namespace server.Migrations.Cobrancas
{
    [DbContext(typeof(CobrancasContext))]
    [Migration("20240803174642_cobrancasTableMigration")]
    partial class cobrancasTableMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Cobrancas", b =>
                {
                    b.Property<int>("cobranca_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("cobranca_id"));

                    b.Property<int>("cliente_id")
                        .HasColumnType("integer");

                    b.Property<string>("data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("pago")
                        .HasColumnType("boolean");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("valor")
                        .HasColumnType("numeric");

                    b.HasKey("cobranca_id");

                    b.ToTable("cobrancas");
                });
#pragma warning restore 612, 618
        }
    }
}
